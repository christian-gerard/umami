{"ast":null,"code":"var _jsxFileName = \"/Users/christiangerard/Development/code/capstone/umami/client/src/pages/recipes/FindRecipe.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useFormik, FieldArray, Formik, Field } from \"formik\";\nimport toast from \"react-hot-toast\";\nimport { object, string, array, number } from \"yup\";\nimport { OpenAI } from 'openai';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'sk-proj-TKC16nONlRhTU2Gvbt34T3BlbkFJMEnoOrgHQ1W5eSj7VAbP';\nconsole.log(process.env);\nconst openai = new OpenAI({\n  apiKey: API_KEY,\n  dangerouslyAllowBrowser: true\n});\nfunction FindRecipe() {\n  _s();\n  const [aiRecipes, setAiRecipes] = useState('');\n  const ingredientSearchSchema = object({\n    settings: string(),\n    ingredients: array().of(object({\n      name: string(),\n      amount: number(),\n      measurement_unit: string()\n    }))\n  });\n  const initialValues = {\n    settings: \"\",\n    ingredients: [{\n      name: \"\",\n      amount: \"\",\n      measurement_unit: \"\"\n    }]\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: ingredientSearchSchema,\n    onSubmit: formData => {\n      console.log(formData);\n      const response = openai.chat.completions.create({\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: \"user\",\n          content: `\n\n\n          Could you generate a recipe for me based on the following ingredients? I only have these ingredients and NOTHING ELSE.\n          Do not add any ingredients that I do not list as available ingredients. I DO NOT HAVE ANYTHING OTHER THAN WHAT I LIST BELOW. ONLY PUT THOSE IN THE RECIPE.\n          \n          IF the ingredients are not generally used together, add a message to the notes saying the combination is unusual or avant garde. If the ingredients go well together do not add any messages to notes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n          ONLY INCLUDE THE JSON\n\n          Please return the recipe in a parseable JSON format \n          {\n            \"name\": \"recipeName\", \n            \"ingredients\": [{\"name\": \"ingredientName\", \"amount\": \"amount\", \"measurement_unit\": \"\"}], \n            \"prep_time\": \"\",\n            \"category\" : \"\",\n            \"steps\":\"\",\n            \"notes\": \"\"\n          \n          }\n\n          ${formData.ingredients.map(ingredient => `${ingredient.amount} ${ingredient.measurement_unit} of ${ingredient.name} `)}\n\n        \n        `\n        }]\n      }).then(resp => {\n        const json = resp.choices[0].message.content;\n        const parsedJson = JSON.parse(json);\n        setAiRecipes(parsedJson);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-shittake text-black p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl text-white\",\n        children: \"AI Generated Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"flex flex-col mt-2 text-white\",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"settings\",\n            className: \"text-2xl\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2 flex flex-row justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"settings\",\n                className: \"text-lg\",\n                children: \"Strictness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: \"Allow the model to get creative\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"10\",\n              className: \"text-black h-[30px]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"text-2xl\",\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"ingredients\",\n            validateOnChange: true,\n            children: fieldArrayProps => {\n              const {\n                push,\n                remove,\n                form\n              } = fieldArrayProps;\n              const {\n                values\n              } = form;\n              const ingredients = values.ingredients || [];\n              const handleAddIngredient = () => {\n                push({\n                  name: \"\",\n                  amount: \"\",\n                  measurement: \"\"\n                });\n              };\n              const handleDeleteIngredient = index => {\n                if (index !== 0) {\n                  remove(index);\n                  const updatedIngredients = [...formik.values.ingredients];\n                  updatedIngredients.splice(index, 1);\n                  formik.setFieldValue('ingredients', updatedIngredients);\n                }\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-2\",\n                children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-black text-nowrap\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: `ingredients[${index}].name`,\n                    value: formik.values.ingredients[index] ? formik.values.ingredients[index].name : \"\",\n                    onChange: formik.handleChange,\n                    placeholder: \"Name\",\n                    className: \"m-1 p-1 rounded-lg w-[250px]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: `ingredients[${index}].amount`,\n                    placeholder: \"#\",\n                    value: formik.values.ingredients[index] ? formik.values.ingredients[index].amount : \"\",\n                    onChange: formik.handleChange,\n                    className: \"m-1 p-1 rounded-lg w-[40px]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"select\",\n                    name: `ingredients[${index}].measurement_unit`,\n                    placeholder: \"Measurement\",\n                    value: formik.values.ingredients[index] ? formik.values.ingredients[index].measurement_unit : \"\",\n                    onChange: formik.handleChange,\n                    className: \"m-1 p-1 rounded-lg w-[80px]\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Measur.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pints\",\n                      children: \"Pint\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"quarts\",\n                      children: \"Quart\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"cups\",\n                      children: \"Cup\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"oz\",\n                      children: \"Ounce\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"fl oz\",\n                      children: \"Fluid Ounce\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"tbsp\",\n                      children: \"Tablespoon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"tsp\",\n                      children: \"Teaspoon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => handleDeleteIngredient(index),\n                    className: \"p-1 m-1 bg-champagne text-black w-[30px] rounded-lg\",\n                    children: \"\\u2212\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: handleAddIngredient,\n                    className: \"p-1 m-1 w-[30px] bg-champagne text-black rounded-lg\",\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-champagne text-black rounded-lg mt-3 pt-1 pb-1\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-1 w-[50%] justify-center m-12 \",\n      children: aiRecipes ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-champagne p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl\",\n          children: aiRecipes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-shittake bold italic\",\n          children: aiRecipes.notes ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" **\", aiRecipes.notes, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: aiRecipes.prep_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: aiRecipes.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: aiRecipes.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row m-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl\",\n              children: [ingredient.name, \" ||\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl mr-4 ml-4\",\n              children: [\"  \", ingredient.amount, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg \",\n              children: ingredient.measurement_unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: aiRecipes.steps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl bg-champagne flex justify-center p-12 rounded-lg\",\n          children: \"Enter your ingredients!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(FindRecipe, \"4rJ3SowhtQM0cKWPvKft8Jrw8XE=\", false, function () {\n  return [useFormik];\n});\n_c = FindRecipe;\nexport default FindRecipe;\nvar _c;\n$RefreshReg$(_c, \"FindRecipe\");","map":{"version":3,"names":["useState","useEffect","useFormik","FieldArray","Formik","Field","toast","object","string","array","number","OpenAI","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","console","log","process","env","openai","apiKey","dangerouslyAllowBrowser","FindRecipe","_s","aiRecipes","setAiRecipes","ingredientSearchSchema","settings","ingredients","of","name","amount","measurement_unit","initialValues","formik","validationSchema","onSubmit","formData","response","chat","completions","create","model","messages","role","content","map","ingredient","then","resp","json","choices","message","parsedJson","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","type","min","max","validateOnChange","fieldArrayProps","push","remove","form","values","handleAddIngredient","measurement","handleDeleteIngredient","index","updatedIngredients","splice","setFieldValue","value","onChange","handleChange","placeholder","as","onClick","notes","prep_time","category","steps","_c","$RefreshReg$"],"sources":["/Users/christiangerard/Development/code/capstone/umami/client/src/pages/recipes/FindRecipe.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useFormik, FieldArray, Formik, Field } from \"formik\";\nimport toast from \"react-hot-toast\";\nimport { object, string, array, number } from \"yup\";\nimport {OpenAI} from 'openai'\n\n\n\n\nconst API_KEY = 'sk-proj-TKC16nONlRhTU2Gvbt34T3BlbkFJMEnoOrgHQ1W5eSj7VAbP'\n\n\nconsole.log(process.env)\n\n\nconst openai = new OpenAI({\n\n  apiKey: API_KEY,\n  dangerouslyAllowBrowser: true\n\n})\n\n\nfunction FindRecipe() {\n  const [aiRecipes, setAiRecipes] = useState('')\n  const ingredientSearchSchema = object({\n    settings: string(),\n    ingredients: array().of(\n      object({\n        name: string(),\n        amount: number(),\n        measurement_unit: string(),\n      }),\n    ),\n  });\n\n  const initialValues = {\n    settings: \"\",\n    ingredients: [\n      {\n        name: \"\",\n        amount: \"\",\n        measurement_unit: \"\",\n      }\n    ],\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: ingredientSearchSchema,\n    onSubmit: (formData) => {\n      console.log(formData)\n      const response = openai.chat.completions.create({\n        model: 'gpt-3.5-turbo',\n        messages: [{role: \"user\", content: `\n\n\n          Could you generate a recipe for me based on the following ingredients? I only have these ingredients and NOTHING ELSE.\n          Do not add any ingredients that I do not list as available ingredients. I DO NOT HAVE ANYTHING OTHER THAN WHAT I LIST BELOW. ONLY PUT THOSE IN THE RECIPE.\n          \n          IF the ingredients are not generally used together, add a message to the notes saying the combination is unusual or avant garde. If the ingredients go well together do not add any messages to notes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n          ONLY INCLUDE THE JSON\n\n          Please return the recipe in a parseable JSON format \n          {\n            \"name\": \"recipeName\", \n            \"ingredients\": [{\"name\": \"ingredientName\", \"amount\": \"amount\", \"measurement_unit\": \"\"}], \n            \"prep_time\": \"\",\n            \"category\" : \"\",\n            \"steps\":\"\",\n            \"notes\": \"\"\n          \n          }\n\n          ${formData.ingredients.map((ingredient) =>  `${ingredient.amount} ${ingredient.measurement_unit} of ${ingredient.name} `)}\n\n        \n        `\n        }]\n      }).then(resp => {\n        const json = resp.choices[0].message.content\n        const parsedJson = JSON.parse(json)\n\n        setAiRecipes(parsedJson)\n        \n        \n      })\n      \n      \n    },\n  });\n\n  return (\n    <div className=\"p-6 flex flex-row\">\n      <div className=\"bg-shittake text-black p-6 rounded-lg\">\n        <h2 className=\"text-4xl text-white\">AI Generated Recipes</h2>\n\n        <Formik initialValues={initialValues} onSubmit={formik.handleSubmit}>\n          <form\n            className=\"flex flex-col mt-2 text-white\"\n            onSubmit={formik.handleSubmit}\n          >\n          \n          <label htmlFor=\"settings\" className='text-2xl'>Settings</label>\n\n          <div className='m-2 flex flex-row justify-between'>\n            <div>\n              <label htmlFor=\"settings\" className='text-lg'>Strictness</label>\n              <p className='text-sm'>Allow the model to get creative</p>\n\n            </div>\n            <input \n              type='number'\n              min='1'\n              max='10'\n              className='text-black h-[30px]'\n            />\n\n          </div>\n\n\n            \n\n            <label htmlFor=\"name\" className='text-2xl'>Ingredients</label>\n\n            <FieldArray name=\"ingredients\" validateOnChange={true}>\n              {(fieldArrayProps) => {\n                const { push, remove, form } = fieldArrayProps;\n                const { values } = form;\n                const ingredients = values.ingredients || [];\n\n                const handleAddIngredient = () => {\n                  push({ name: \"\", amount: \"\", measurement: \"\" });\n                };\n\n                const handleDeleteIngredient = (index) => {\n\n                  if (index !== 0) {\n\n                    remove(index)\n                    const updatedIngredients = [...formik.values.ingredients]\n                    updatedIngredients.splice(index, 1)\n                    formik.setFieldValue('ingredients',updatedIngredients)\n\n                  }\n\n                }\n\n                return (\n                  <div className='m-2'>\n                    {ingredients.map((ingredient, index) => (\n                      <div key={index} className=\"text-black text-nowrap\">\n                        <Field\n                          name={`ingredients[${index}].name`}\n                          value={\n                            formik.values.ingredients[index]\n                              ? formik.values.ingredients[index].name\n                              : \"\"\n                          }\n                          onChange={formik.handleChange}\n                          placeholder=\"Name\"\n                          className=\"m-1 p-1 rounded-lg w-[250px]\"\n                        />\n                        <Field\n                          name={`ingredients[${index}].amount`}\n                          placeholder=\"#\"\n                          value={\n                            formik.values.ingredients[index]\n                              ? formik.values.ingredients[index].amount\n                              : \"\"\n                          }\n                          onChange={formik.handleChange}\n                          className=\"m-1 p-1 rounded-lg w-[40px]\"\n                        />\n                        <Field\n                          as='select'\n                          name={`ingredients[${index}].measurement_unit`}\n                          placeholder=\"Measurement\"\n                          value={\n                            formik.values.ingredients[index]\n                              ? formik.values.ingredients[index].measurement_unit\n                              : \"\"\n                          }\n                          onChange={formik.handleChange}\n                          className=\"m-1 p-1 rounded-lg w-[80px]\"\n                        >\n                          <option value=''>Measur.</option>\n                          <option value='pints'>Pint</option>\n                          <option value='quarts'>Quart</option>\n                          <option value='cups'>Cup</option>\n                          <option value='oz'>Ounce</option>\n                          <option value='fl oz'>Fluid Ounce</option>\n                          <option value='tbsp'>Tablespoon</option>\n                          <option value='tsp'>Teaspoon</option>\n                        </Field>\n\n                        <button\n                          type=\"button\"\n                          onClick={() => handleDeleteIngredient(index)}\n                          className=\"p-1 m-1 bg-champagne text-black w-[30px] rounded-lg\"\n                        >\n                          −\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={handleAddIngredient}\n                          className=\"p-1 m-1 w-[30px] bg-champagne text-black rounded-lg\"\n                        >\n                          +\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                );\n              }}\n            </FieldArray>\n\n            <button\n              className=\"bg-champagne text-black rounded-lg mt-3 pt-1 pb-1\"\n              type=\"submit\"\n            >\n              Search\n            </button>\n          </form>\n        </Formik>\n      </div>\n\n      <div className=\"border-1 w-[50%] justify-center m-12 \">\n        {\n          aiRecipes ? \n          <div className='bg-champagne p-4 rounded-lg'>\n            <h1 className='text-4xl'>\n              {aiRecipes.name}\n            </h1>\n            <h2 className='text-shittake bold italic'>\n              { aiRecipes.notes ? \n              <p> **{aiRecipes.notes} </p>\n              :\n              <></>\n              }\n            </h2>\n\n            <p>{aiRecipes.prep_time}</p>\n            <p>{aiRecipes.category}</p>\n            <div>\n              {aiRecipes.ingredients.map((ingredient) => \n              <div className='flex flex-row m-2 '> \n                <h3 className='text-xl'>{ingredient.name} ||</h3> \n                <p className=\"text-xl mr-4 ml-4\">  {ingredient.amount}  </p> \n                <p className=\"text-lg \">{ingredient.measurement_unit}</p> \n                \n              </div>) }\n            </div>\n            <div>\n\n              {aiRecipes.steps}\n            </div>\n          </div>\n          :\n          <>\n            <h1 className='text-2xl bg-champagne flex justify-center p-12 rounded-lg'>Enter your ingredients!</h1>\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default FindRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}